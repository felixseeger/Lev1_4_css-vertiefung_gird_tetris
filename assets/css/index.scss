/* resets */
*,
*:before,
*:after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

/*/ variables /*/
$colTetris: "repeat(8, [col] 1fr)";
$rowTetris: "repeat(12, [row] 1fr)";

.wrapper {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	background: linear-gradient(to Bottom, slateGrey, lightSlateGrey);
}
.tetris {
	flex-grow: 0;
	width: 400px;
	height: 600px;
	background: linear-gradient(to Bottom, SeaShell, Ivory);
	display: grid;
	grid-template-columns: #{$colTetris};
	grid-template-rows: #{$rowTetris};
	border: 5px solid whiteSmoke;

	.cube {
		grid-column: col 7 / col 9;
		grid-row: row 11 / row 13;
		background: linear-gradient(to Bottom, darkRed, FireBrick);
	}
	.tube {
		grid-column: col 6 / col 7;
		grid-row: row 10 / row 13;
		background: linear-gradient(to Bottom, SkyBlue, LightSkyBlue);
	}
	.el-one {
		grid-column: col 4 / col 6;
		grid-row: row 12 / row 13;
		background: linear-gradient(to Bottom, tomato, coral);
	}
	.el-two {
		grid-column: col 4 / col 5;
		grid-row: row 10 / row 12;
		background: linear-gradient(to Bottom, coral, tomato);
	}
	.arrow-one {
		grid-column: col 1 / col 4;
		grid-row: row 12 / row 13;
		background: black;
	}
	.arrow-two {
		grid-column: col 2 / col 3;
		grid-row: row 11 / row 12;
		background: linear-gradient(to Bottom, green, ForestGreen);
	}

	.purple {
		grid-column: col 8 / col 9;
		grid-row: row 8 / row 10;
		background: linear-gradient(to Bottom, Plum, Thistle);
	}
	.purple-two {
		grid-column: col 7 / col 9;
		grid-row: row 10 / row 11;
		background: linear-gradient(to Bottom, Thistle, Plum);
	}
	.tube-sandy {
		grid-column: col 3 / col 4;
		grid-row: row 9 / row 12;
		background: linear-gradient(to top, Pink, LightPink);
	}
	.arrow-down {
		grid-column: col 5 / col 6;
		grid-row: row 4 / row 6;
		background: linear-gradient(to right, #e46d18, Chocolate);
	}
	.arrow-down-two {
		grid-column: col 6 / col 7;
		grid-row: row 5 / row 7;
		background: linear-gradient(to right, Chocolate, #e46d18);
	}

	.arrow-first-down {
		grid-column: col 2 / col 3;
		grid-row: row 2 / row 3;
		background: linear-gradient(to top, DimGrey, grey);
	}
	.arrow-first-down-two {
		grid-column: col 1 / col 4;
		grid-row: row 1 / row 2;
		background: linear-gradient(to bottom, DimGrey, grey);
	}
}
